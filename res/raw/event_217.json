{"description": "\n<p>Sharing your awesome code with the world is fun and rewarding, and the <span class=\"caps\">CPAN</span> is\na great distribution mechanism.  Unfortunately, there&#8217;s a lot of boring\nmaintenance involved in the process, above and beyond just writing awesome\ncode.  Dist::Zilla is a framework for automating every part of your packaging\nand release cycle.  It builds an installer, writes out boilerplate files,\ndetermines your prerequisite libraries, rewrites your documentation, updates\nthe changelog, interacts with your version control system, and uploads your\nrelease to the <span class=\"caps\">CPAN</span>.</p>\n<p>Because it only runs on the author&#8217;s machine, it&#8217;s free to have outlandish\nrequirements and execution costs, but the released code has no special\nprerequistes and looks like any boring distribution from the installer&#8217;s\nperspective.  Because it&#8217;s primarily a framework for plugins, the behavior of\nDist::Zilla can be customized from minimal release automation to maximum\noverkill.  Hundreds of <span class=\"caps\">CPAN</span> distributions have already switched to Dist::Zilla\nto harness its power.</p>\n<p>This presentation will cover writing new distributions using Dist::Zilla as\nwell as converting existing distributions.  The existing plugins will be\nexplained, along with common configurations.  It will cover writing new plugins\nand plugin bundles.</p>\n", "title": "Dist::Zilla - Maximum Overkill for CPAN Distributions", "start_time": "2010-07-22T11:30:00-07:00", "track_id": 8, "user_ids": [35], "room_id": 8, "end_time": "2010-07-22T12:10:00-07:00", "id": 217}