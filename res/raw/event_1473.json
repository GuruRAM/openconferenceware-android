{"description": "\n<p>BitC is a new systems programming language combining the safety, flexibility, and richness of Haskell with the low-level expressivenes of C or C++. Programs in BitC are type- and memory-safe, but are able to deal efficiently with low-level data structures. Early measurements suggest a performance penalty of between 1.5% and 3% relative to C. While bytecode implementations are possible, BitC is designed to be statically compiled.</p>\n<p>The <span class=\"caps\">EROS</span> Group is a provider of high-confidence software and systems, which are expensive to build and more expensive to maintain. BitC is part of an emerging tool chain that exploits modern, advanced type systems and static checking techniques for maintainably high-confidence systems. Our company is about to start converting the most sensitive parts of our secure operating system to BitC, which will reduce risk of penetration while allowing us to rigorously check and maintain our application-level requirements and invariants.</p>\n<p>The talk will focus on those elements of BitC that were driven by our experience building the Coyotos operating system, and how we plan to use the language to keep our systems robust. I also look forward to talking with people and answering questions during the group sessions.</p>\n", "title": "BitC", "start_time": "2010-07-22T13:40:00-07:00", "track_id": 2, "user_ids": [1485], "room_id": 33, "end_time": "2010-07-22T14:00:00-07:00", "id": 1473}