{"description": "\n<p>Jython is often being accused of being slow, or assumed to be dead. The rumors of Jython&#8217;s death are greatly exaggerated, and the slow part is a problem that will pass.</p>\n<p>JRuby has shown the way by achieving great performance, and with <span class=\"caps\">JSR 292</span> (&#8220;Supporting Dynamically Typed Languages on the Java Platform&#8221;) making steady progress Jython is sure to follow in those footsteps. In this talk you will find out what the Jython team is working on to realize that goal.</p>\n<p>Jython 2.5 was released a while back, after which a lot of the focus of the core development team shifted towards the recently published <a href=\"http://www.apress.com/book/view/1430225270\">Jython book</a>. With the release of this book attention is now turned towards the next version of Jython. In this talk you will find out about what new features await in that version, and what the plan is for Jython in terms of the Python 2.x lifespan and the progress towards Python 3.x.</p>\n<p>The great thing about writing code for an evolving runtime such as Jython, executing on an improving platform such as the <span class=\"caps\">JVM</span> is that your code will be better without you having to do anything (except updating your Jython installation). In this presentation you will find out what sort of improvements to expect from Jython in the coming releases. You will also learn about the features that are being implemented to make the coding experience smoother. Such as improvements in the integration with Java and other programming languages on the <span class=\"caps\">JVM</span></p>\n", "title": "A better Python for the JVM", "start_time": "2010-07-22T14:30:00-07:00", "track_id": 5, "user_ids": [885], "room_id": 10, "end_time": "2010-07-22T15:10:00-07:00", "id": 1533}