{"description": "\n<p><strong>NoSQL Landscape &#8211; Nosh Petigara, 10gen</strong></p>\n<p>As more web developers strive to make their applications scalable we see a shift away from the traditional <span class=\"caps\">LAMP</span> stack towards technologies built with a focus on scaling. As part of this shift, a new approach to data storage for the web is needed \u2013 the traditional <span class=\"caps\">RDBMS</span> are not suited to many of the problems that appear in large scale web applications. Fortunately, a large number of alternatives to the <span class=\"caps\">RDBMS</span> have sprung up, each with different goals and approaches to the problem of scalability. Nosh will talk about the NoSQL landcape (key-value stores, document databases, map-reduce frameworks, and column-oriented databases), the advantages and disadvantages of these datastores, and how they are used today to solve real-world problems.</p>\n<p><strong>NoSQL at Geeknet &#8211; Rick Copeland, Geeknet</strong></p>\n<p>The Geeknet engineering team manages the sites SourceForge.net, Slashdot, freshmeat, and fossfor.us. Geeknet had been using relational databases (Postgres and MySQL) for a variety of things for a long time. But there are many situations where our needs for scalability, replication, and higher throughput, were not being well met by relational databases, and so Geeknet investigated a number of alliterative NoSQL&#8217; data storage solutions. Geeknet&#8217;s tests led to MongoDB, a scalable, high-performance, open source, schema-free, document-oriented database with a flexible query system. Mark will highlight the process Geeknet used to evaluate and select a NoSQL solution that was applicable to their business and technology requirements.</p>\n<p><strong>Building and Deploying a NoSQL Datastore Application with MongoDB &#8211; Rick Copeland, Geeknet</strong></p>\n<p>Geeknet rewrote the download pages on SourceForge.net, and the requirements were for high read performance, replication, and a way to easily do partial updates of large records. Basically Geeknet wanted a document store that would allow them to save all the data needed for a project page render in a single record.</p>\n\n\nRick will discuss:\n\t\n&nbsp;&nbsp;&nbsp;&#8226; Rewriting the Sourceforge application to take advantage of MongoDB&#8217;s unique features<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Moving data from a relational to non-relational store<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Deployment architecture in use at Sourceforge<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Benefits and challenges<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Future plans<br/>\n<br/>\n", "title": "Scaling SourceForge with MongoDB", "start_time": "2010-07-21T17:20:00-07:00", "track_id": 4, "user_ids": [1113, 1119], "room_id": 7, "end_time": "2010-07-21T18:00:00-07:00", "id": 1095}