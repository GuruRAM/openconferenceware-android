{"description": "\n<p>Object-oriented programming began, back in the 1960s with Simula, as a way to describe the behavior of interacting items &#8211; objects.  It was purified through languages such as Smalltalk, in which everything is an object and every operation a message send, a clear and beautiful model.  But then something went very wrong.  Just as OO became the orthodoxy, it also became overwrought: keyword-heavy, type-heavy, and eventually, by necessity, tool-heavy.  Today&#8217;s students are taught that programming is about type hierarchies and abstractions, ways of delaying the work; it used to be algorithms and data structures, which actually get the job done.  How did the standard form of computing become so noisy and empty?  Can we do something about it?</p>\n", "title": "Public Static Void", "start_time": "2010-07-22T09:45:00-07:00", "track_id": 1, "user_ids": [63], "room_id": 1, "end_time": "2010-07-22T10:00:00-07:00", "id": 69}