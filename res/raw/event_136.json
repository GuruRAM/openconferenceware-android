{"description": "\n<p>We often have clients approach us looking for help in scaling their systems, and all too often their long term vision is a mixed reality based on the approaches read about on popular blogs from people trying to solve very different problems. Hey, scaling your database can be difficult enough by itself, you don&#8217;t want to get tripped up by not understanding where you&#8217;re really going. In Database Scalability Patterns we will attempt to distill all of the information/hype/discussions around scaling databases, and break down the common patterns we&#8217;ve seen dealing with scaling databases.  &#8220;Buzzwords&#8221; we&#8217;ll cover (and hopefully debuzz) include:</p>\n<p>Vertical Scaling\nHorizontal Partitioning\nHorizontal Scaling\nRead Slaves\nMulti-Master\nVertical Partitioning\nFederated Data Storage</p>\n<p>More important than just describing what these things are (although that&#8217;s a good first step), we&#8217;ll also discuss along the way different points in the life-cycle of your database when you need to be thinking about the different options in front of you. We&#8217;ll factor in the types of application that your working on (think <span class=\"caps\">OLTP</span> vs <span class=\"caps\">OLAP</span>, or Social Networking vs. Corporate Application), the environment you&#8217;ll be working on (Scaling &#8220;in the cloud&#8221; is very different from <span class=\"caps\">DIY</span> in the datacenter), and we will talk about the types of tools you&#8217;ll need to accomplish these goals (All replication systems are not the same, and some won&#8217;t help at all).</p>\n", "title": "Database Scalability Patterns", "start_time": "2010-07-21T13:40:00-07:00", "track_id": 4, "user_ids": [122], "room_id": 7, "end_time": "2010-07-21T14:20:00-07:00", "id": 136}