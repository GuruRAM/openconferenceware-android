{"description": "\n<p>Anyone who develops software for a living needs a proven way to produce it better, faster, and cheaper. This session offers critical timesaving and productivity tools that you can adopt right away, no matter what platform you use. I not only offers advice on the mechanics of productivity-how to work smarter, spurn interruptions, get the most out your computer, and avoid repetition-he also details valuable practices that will help you elude common traps, improve your code, and become more valuable to your team. You&#8217;ll learn to:</p>\n\n&nbsp;&nbsp;&nbsp;&#8226; Write the test before you write the code<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Manage the lifecycle of your objects fastidiously<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Build only what you need now, not what you might need later<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Apply ancient philosophies to software development<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Question authority, rather than blindly adhere to standards<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Make hard things easier and impossible things possible through meta-programming<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Be sure all code within a method is at the same level of abstraction<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Pick the right editor and assemble the best tools for the job<br/>\n<br/>\n<p>This isn&#8217;t theory, but the fruits of my real-world experience as an Application Architect at the global IT consultancy ThoughtWorks. Whether you&#8217;re a beginner or a pro with years of experience, you&#8217;ll improve your work and your career with the simple and straightforward principles in The Productive Programmer.</p>\n", "title": "The Productive Programmer", "start_time": "2010-07-19T13:30:00-07:00", "track_id": 3, "user_ids": [171], "room_id": 8, "end_time": "2010-07-19T17:00:00-07:00", "id": 183}