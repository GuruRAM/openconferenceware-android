{"description": "\n<p>So you&#8217;ve written a Django site&#8230; now what? Writing the application is just\nthe beginning; now you&#8217;ve got to put it into production! In this hands-on\nworkshop we&#8217;ll walk through the creation of a full Django deployment\nenvironment running on a cluster of (virtual) machines.</p>\n<p>This class will introduce students to a wide variety of technologies, including,\nApache, Fabric, nginx, mod_wsgi, memcached, PostgreSQL, pgpool, pg_standby, and\nmore.</p>\n<p>By the end of the class, each student will have created an environment\nfeaturing:</p>\n\n&nbsp;&nbsp;&nbsp;&#8226; Multiple levels of caching and load balancing.<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Multiple web application servers.<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Redundant replicated database servers.<br/>\n<br/>\n<p>We&#8217;ll create this whole stack on virtual machines, and students will be able to\ntake home a complete copy of all the deployment configuration for future review\nat their leisure.</p>\n<p>Note: the example application used in this class with be a Django site, and\nthe class assumes at least a moderate comfort level with Django. However, the\ntools and techniques apply just as well to other Python web frameworks, so\nusers of other tools will likely be able to follow along fairly easily.</p>\n<p><strong>Outline:</strong></p>\n<em>Getting started</em>\n\n&nbsp;&nbsp;&nbsp;&#8226; Introducing our example application.<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Overview of where we&#8217;re going.<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Very brief intro to <span class=\"caps\">EC2</span> and S3.<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Exercise: run our first VM.<br/>\n<br/>\n<em>Application server: mod_wsgi</em>\n\n&nbsp;&nbsp;&nbsp;&#8226; What&#8217;s an application server? <br/>\n&nbsp;&nbsp;&nbsp;&#8226; Introducing mod_wsgi<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Configuring Apache and mod_wsgi<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Exercise: deploy the application under mod_wsgi.<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Exercise: initial load test.<br/>\n<br/>\n<em>Database server: PostgreSQL</em>\n\n&nbsp;&nbsp;&nbsp;&#8226; Why a separate database server?<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Configuring PostgreSQL<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Exercise: deploy PostgreSQL.<br/>\n<br/>\n<em>Introducing Fabric</em>\n\n&nbsp;&nbsp;&nbsp;&#8226; What&#8217;s Fabric?<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Writing fabfiles.<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Integrating fabfiles into Django applications.<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Exercise: deploy using Fabric<br/>\n<br/>\n<em>Multiple web servers</em>\n\n&nbsp;&nbsp;&nbsp;&#8226; Why multiple web servers?<br/>\n&nbsp;&nbsp;&nbsp;&#8226; &#8220;Shared nothing&#8221; <br/>\n&nbsp;&nbsp;&nbsp;&#8226; Dealing with medi<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Load balancers<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Introducing nginx<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Using nginx as a reverse proxy<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Exercise: deploy onto multiple machines.<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Exercise: crash a web server.<br/>\n<br/>\n<em>Caching servers</em>\n\n&nbsp;&nbsp;&nbsp;&#8226; Local caching vs. dedicated caching.<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Introducing memcached<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Using memcached with Django.<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Exercise: deploy with multiple cache servers.<br/>\n<br/>\n<em>Database connection middleware</em>\n\n&nbsp;&nbsp;&nbsp;&#8226; Why connection middleware?<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Introducing pgpool.<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Configuring pg_pool and Django.<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Exercise: deploy pg_pool<br/>\n<br/>\n<em>Database redundancy</em>\n\n&nbsp;&nbsp;&nbsp;&#8226; Redundancy strategies<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Warm standby with pg_standby<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Exercise: configure warm standby<br/>\n&nbsp;&nbsp;&nbsp;&#8226; Exercise: fall over to the slave<br/>\n<br/>\n<p><em>Final exercise: load testing &#8211; how&#8217;d we do?</em></p>\n", "title": "Django Deployment Workshop", "start_time": "2010-07-19T13:30:00-07:00", "track_id": 5, "user_ids": [31, 32], "room_id": 11, "end_time": "2010-07-19T17:00:00-07:00", "id": 46}