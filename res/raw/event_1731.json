{"description": "\n<p>Creating your own dynamic language can be a messy, painful affair. Instead of\nfocusing on the features that make your language unique, you have to waste a lot\nof time dealing with secondary issues like cross-platform support, garbage\ncollection and just-in-time compilation.</p>\n<p>The <a href=\"http://codespeak.net/pypy/dist/pypy/doc/translation.html\">PyPy Translation Toolchain</a> \u2014 which has\nalready been successfully used to build alternative Python and Scheme\ninterpreters \u2014 can save you from all of this hassle. This talk will show how\neasy it can be to create your own language by taking advantage of the benefits\nthat PyPy offers:</p>\n\n&nbsp;&nbsp;&nbsp;&#8226; <a href=\"http://codespeak.net/pypy/dist/pypy/doc/jit/overview.html\"><span class=\"caps\">JIT</span></a> \u2014 thanks to\n the state-of-the-art just-in-time compilation, your language could be dynamic\n and still be competitive with lower-level languages in terms of speed.<br/>\n<br/>\n\n&nbsp;&nbsp;&nbsp;&#8226; <a href=\"http://codespeak.net/pypy/dist/pypy/doc/garbage_collection.html\">Garbage\n collection</a> \u2014\n select from the half dozen already implemented and tested strategies for use\n by your language.<br/>\n<br/>\n\n&nbsp;&nbsp;&nbsp;&#8226; <a href=\"http://codespeak.net/pypy/dist/pypy/doc/sandbox.html\">Sandboxing capability</a> \u2014\n secure your interpreter so that untrusted code can be safely run on all\n platforms, whether it be a browser or an App Engine like service.<br/>\n<br/>\n\n&nbsp;&nbsp;&nbsp;&#8226; <a href=\"http://www.unicode.org/standard/standard.html\">Unicode</a> \u2014 your language can be\n fully unicode-aware and you don&#8217;t even have to know how case folding works in\n different locales.<br/>\n<br/>\n\n&nbsp;&nbsp;&nbsp;&#8226; <a href=\"http://codespeak.net/pypy/dist/pypy/doc/translation.html#the-stackless-transform\">Stackless\n transformation</a>\n \u2014 easily add support for your language to be massively concurrent.<br/>\n<br/>\n\n&nbsp;&nbsp;&nbsp;&#8226; <a href=\"http://codespeak.net/pypy/dist/pypy/doc/translation.html#the-c-back-end\">Cross-platform</a>\n \u2014 have your interpreter run on a number of different backends, whether it be\n native or on top of the <span class=\"caps\">CLI</span> (.NET/Mono) or the <span class=\"caps\">JVM</span> (Java).<br/>\n<br/>\n\n&nbsp;&nbsp;&nbsp;&#8226; <a href=\"http://github.com/tav/ampify/tree/master/src/webkit_bridge/\">WebKit bridge</a> \u2014\n create browsers which can natively load scripts in your language via script\n tags and even access the <span class=\"caps\">DOM</span>, just like JavaScript!<br/>\n<br/>\n", "title": "Create Your Own Programming Language in 20 Minutes using PyPy", "start_time": "2010-07-22T17:20:00-07:00", "track_id": 2, "user_ids": [1773], "room_id": 33, "end_time": "2010-07-22T17:40:00-07:00", "id": 1731}