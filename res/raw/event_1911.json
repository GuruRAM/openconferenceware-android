{"description": "\n<p>QA as currently practiced is dying. Too many people rely solely on manual testing of their applications, which is error prone and time consuming. Sadly, the bottleneck imposed by poor QA practices causes many teams to hesitate when making large scale application and architectural changes. Thankfully, automated QA is entirely possible. With tools like Cucumber, we can remove this QA bottleneck and allow our QA teams to manually test only those pieces that really need human eyes. Cucumber lets developers, QA people, or even savvy business analysts write acceptance and integration tests in a human readable language called Gherkin. Though this language is parsed with regexes and implemented in Ruby, it is surprisingly easy to work with. It&#8217;s a valid fear that something in this style would lead to an unmaintainable mess of code, but it turns out that in practice this is often not the case.</p>\n<p>In this talk, I&#8217;ll explain why automated QA provides immediate benefit and is nowhere near as difficult to implement as people may think. We&#8217;ll discuss how Cucumber is structured and why it is currently the best tool for the job. My hope is that this talk will help teams shave days off their build cycles and help them gain the confidence to make large application changes without an underlying fear that some unknown bug will ruin everything.</p>\n", "title": "Unit Tests Aren't Enough!", "start_time": "2010-07-23T11:00:00-07:00", "track_id": 3, "user_ids": [1461], "room_id": 20, "end_time": "2010-07-23T11:40:00-07:00", "id": 1911}