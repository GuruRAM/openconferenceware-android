{"description": "\n<p>When Simula 67 was introduced 40 years ago, modern OO was born. Unfortunately, though developers generally agree about classes, polymorphism and encapsulation, OO has always had a code smell due to four decades of disagreement over how to use inheritance. We&#8217;ll take a look at the debate and explain what the core problem is.  Then we&#8217;ll solve is using Smalltalk-style traits, also known as &#8220;roles&#8221;.</p>\n<p>Along the way, we&#8217;ll take a look at Java&#8217;s interfaces, Ruby&#8217;s mixins (well, they&#8217;re actually from a dialect of Lisp, but don&#8217;t tell anyone), scream in horror (and wonder) at Beta&#8217;s inheritance model and finally settle on Moose::Role, a robust trait implementation in Perl 5.  Real-world examples from <span class=\"caps\">BBC</span> code will be presented and along with descriptions of the problems we encountered along the way.  Time permitting, we&#8217;ll also discuss future research into traits and some pitfalls developers may wish to be aware of.</p>\n", "title": "Scratching the 40-Year Itch of Inheritance with Smalltalk-style Traits", "start_time": "2010-07-21T16:30:00-07:00", "track_id": 8, "user_ids": [154], "room_id": 8, "end_time": "2010-07-21T17:10:00-07:00", "id": 167}