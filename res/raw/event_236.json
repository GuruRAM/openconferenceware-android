{"description": "\n<p>There is an ever expanding universe of tools available to build rich, graphical applications quickly and easily.  However, despite the ease with which developers can build gorgeous user interfaces, the trusty terminal window persists as a perennial favorite for many people.  As a remote access solution, command line and character-mode interfaces still offer a combination of reliability, security, ease-of-access and under-the-hood simplicity that is difficult to match by shinier counterparts.</p>\n<p>Just because someone uses a terminal window, it doesn&#8217;t (always) mean that person prefers difficult configuration file editing.  While many system administrators have gotten really good at concocting wild command lines to pull up important real-time information, few would turn down a good tool that presents the information cleanly and quickly.  Server tools with a good terminal user interface can be the thing that sets an application apart from applications with obtuse configuration files and raw logs.</p>\n<p>There are a number of toolkits available that make it much easier than ever before to design delightful, intuitive user interfaces for the terminal window.  This talk will explore several options for Python, including cmd (for basic command line interfaces), and curses (for full window applications), as well as a couple of options that build on top of curses: newt/snack (for basic &#8220;dialog&#8221; like applications) and urwid (for a richer toolset and greater control).   I&#8217;ll compare the different approaches for different application domains, and show some shortcuts for the impatient.</p>\n", "title": "Great User Interfaces in the Terminal Window", "start_time": "2010-07-22T13:40:00-07:00", "track_id": 5, "user_ids": [115], "room_id": 10, "end_time": "2010-07-22T14:20:00-07:00", "id": 236}