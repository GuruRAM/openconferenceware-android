{"description": "\n<p><strong>Basic Erlang</strong><br />\n This section deals with Erlang data types and pattern matching. Functions, modules, and BIFs are discussed. Before the exercises, the Erlang shell, useful shell commands as well as Emacs and its Erlang mode are introduced.</p>\n<p><strong>Sequential Programming</strong><br />\n The Sequential Programming section comprehends conditional evaluations, guards and scope of variables. It then introduces recursion, with a special emphasis on different recursive patterns, tail recursion, and space saving optimizations. Before the exercises, libraries and their manual pages, possible run time errors and the debugger are demonstrated.</p>\n<p><strong>Concurrent Programming</strong><br />\n This section describes the creation of processes and their life span. It looks at sending and receiving messages, selective reception, and passing data in the messages. It continues with the various uses of time outs and registering processes, and terminates by showing the generic process code structure. Before the exercises, a demonstration of the Process Manager tool is given.</p>\n<p><strong>Process Error Handling</strong><br />\n This section introduces the simple but powerful error handling mechanisms in processes. It looks at process links, exit signals and their propagation semantics. How robust systems are built in Erlang are discussed, and an example from the Process Design Patterns section is re-implemented, making it robust.</p>\n<p>Delegates who will benefit from this tutorial includes those want to learn more about Erlang and its concurrency model. Attending will put you on the right track in building distributed, fault tolerant massively concurrent soft real-time systems.</p>\n<p>In order to get the most out of this tutorial, you must have a good grasp of other programming languages. <strong>This will be a hands on tutorial. Make sure you come with your laptop having installed Erlang and your favourite editor.</strong></p>\n", "title": "Practical Erlang Programming", "start_time": "2010-07-20T08:30:00-07:00", "track_id": 18, "user_ids": [333], "room_id": 12, "end_time": "2010-07-20T12:00:00-07:00", "id": 327}