{"description": "\n<p>Gimli is an Open Source (3-clause <span class=\"caps\">BSD</span> License) crash tracing and analysis framework that provides watchdog and tracing support for Linux, Solaris and Darwin.</p>\n<p>The watchdog feature enables the process to be respawned in the case of a fault (such as a crash or a hang), and the tracing feature allows collection of information from the faulting process that will allow a software developer to diagnose and resolve the problem, perhaps without having to invoke traditional debugging tools.</p>\n<p>While these capabilities are not earth shattering, the Gimli solution tackles this from the perspective of an automated but extensible debugger.  The default tracing behavior is to output a stack trace of all threads in the process, unwinding using <span class=\"caps\">DWARF</span>-3 debugging information (with traces superior to <span class=\"caps\">GDB</span> in some cases).  A Gimli aware software package can provide gimli modules that will be run during tracing to gather additional information from the target, for example, to dump out the contents of a circular log buffer as part of the trace file.</p>\n<p>This session is aimed at Developers and Systems Administrators and shows how to apply Gimli to your processes, be they written in C or scripted in Perl, <span class=\"caps\">PHP</span> or whatever, to take advantage of its watchdog and tracing capabilities.  We&#8217;ll also touch on creating gimli modules for augmentation of trace files.</p>\n", "title": "Gimli - Server Process Monitoring and Fault Analysis", "start_time": "2010-07-23T11:00:00-07:00", "track_id": 17, "user_ids": [304], "room_id": 9, "end_time": "2010-07-23T11:40:00-07:00", "id": 312}