{"description": "\n<p>As a language, Javascript has had a truly remarkable history: named after the unrelated Java language in a blatent attempt to catch its marketing coattails; mocked as a &#8220;toy language&#8221; and generally ignored by most software engineers; finally, made indispensable by the rise of modern, highly-dynamic web applications.</p>\n<p>The funny thing is that there are actually some pretty cool concepts in this weird little language. Higher-order functions, prototype-based object orientation, and asynchronous messaging all lurk at the heart of modern Javascript code.</p>\n<p>This presentation will go back to the languages that helped inspire the original design of Javascript (Self, Scheme) and those it&#8217;s borrowed from more recently (Python, ML, Erlang) to see how these powerful idioms were used in their original incarnations. In the process, we&#8217;ll see how Javascript knits together these eclectic influences to make something truly new.</p>\n", "title": "Don't Fear the Closure", "start_time": "2010-07-22T14:30:00-07:00", "track_id": 20, "user_ids": [1533], "room_id": 7, "end_time": "2010-07-22T15:10:00-07:00", "id": 1509}